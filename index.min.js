class t extends HTMLElement{constructor(){super(),this.__shadowRoot=this.attachShadow({mode:"open"});const e=document.createElement("template");e.innerHTML=t.template(),this.__shadowRoot.appendChild(e.content.cloneNode(!0))}connectedCallback(){this.setAttribute("role","presentation")}static template(){return'\n      <style>\n        :host {\n          display: block;\n          overflow: hidden;\n          text-align: center;\n        }\n        :host:before, \n        :host:after {\n          content: "";\n          display: inline-block;\n          vertical-align: middle;\n          position: relative;\n          width: 50%;\n          border-top-style: var(--hr-style, solid);\n          border-top-width: var(--hr-width, 1px);\n          border-color: var(--hr-color, #000);\n        }\n        :host:before {\n          right: var(--space-around, 1em);\n          margin-left: -50%;\n        }\n        :host:after {\n          left: var(--space-around, 1em);\n          margin-right: -50%;\n        }\n      \n        ::slotted(*) {\n          display: inline-block;\n          width: var(--width, 32px);\n          height: var(--height, 32px);\n          vertical-align: middle;\n        }\n      </style>\n      <slot></slot>\n    '}}customElements.define("wc-icon-rule",t);export{t as WCIconRule};
